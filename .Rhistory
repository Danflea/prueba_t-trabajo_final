(N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu))
(N*1.96*mu)/(N*5^2+1.96^2*sqrt(mu))
n <- (N*1.96*mu)/(N*5^2+1.96^2*sqrt(mu))
n_h <- nrow(data_hombre)
n_m <- nrow(data_mujer)
N_h <- nrow(data_hombre)
N_m <- nrow(data_mujer)
n_h <- n*N_h/N
n_m <- n*N_m/N
n_h <- n*N_h/N %>% round(1)
n_h <- n*N_h/N %>% round(1)
n*N_h/N %>% round(1)
n*N_h/N %>% round(2)
n*N_h/N %>% round(0)
round(n*N_h/N, 1)
n_h <- n*N_h/N %>% round(,1)
n*N_h/N %>% round(,1)
n_h <- round(n*N_h/N, 1)
n_m <- round(n*N_m/N, 1)
n_m <- round(n*N_m/N, 0)
n_h <- round(n*N_h/N, 0)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
muestra
View(muestra)
n_m+n_h
(N*1.96*mu)/(N*0.05^2+1.96^2*sqrt(mu))
(N*1.96*mu)/(N*5^2+1.96^2*sqrt(mu))
(N*1.96*mu)/(N*10^2+1.96^2*sqrt(mu))
sd(data_rural_sin$M500_EM_2S_2023_MA)
var(data_rural_sin$M500_EM_2S_2023_MA)
sd(data_rural_sin$M500_EM_2S_2023_MA)
sd(data_rural_sin$M500_EM_2S_2023_MA)^2
(N*qnorm(0.95*mu)/(N*5^2+qnorma(0.95^2*sqrt(mu))
(N*qnorm(0.95*mu)/(N*5^2+qnorma(0.95^2*sqrt(mu))
(N*qnorm(0.95*mu)/(N*5^2+qnorma(0.95^2*sqrt(mu)))
(N*qnorm(0.95*mu))/(N*5^2+qnorma(0.95^2*sqrt(mu)))
(N*qnorm(0.95)*mu)/(N*5^2+qnorma(0.95)^2*sqrt(mu))
(N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu))
(N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu))
qnorm(0.95)
(N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu))
round(N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu)),0)
round((N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu)),0)
# Estimar el tamaño de muestra para una población infinita
n <- round((N*qnorm(0.95)*mu)/(N*5^2+qnorm(0.95)^2*sqrt(mu)),0)
n_h <- round(n*N_h/N, 0)
n_m <- round(n*N_m/N, 0)
library(TeachingSampling)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
muestra
View(muestra)
View(muestra)
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
View(muestra_hombre)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
shapiro.test(muestra_hombre)
shapiro.test(muestra_hombre$M500_EM_2S_2023_MA)
shapiro.test(muestra_mujer$M500_EM_2S_2023_MA)
library(TeachingSampling)
set.seed(123)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
View(muestra)
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
shapiro.test(muestra_hombre$M500_EM_2S_2023_MA)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
shapiro.test(muestra_mujer$M500_EM_2S_2023_MA)
qnorm(1 - (1 - 0.95) / 2)
z <- qnorm(1 - (1 - 0.95) / 2)
n <- round((N*z*mu)/(N*5^2+z^2*sqrt(mu)),0)
n_h <- round(n*N_h/N, 0)
n_m <- round(n*N_m/N, 0)
library(TeachingSampling)
set.seed(123)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
View(muestra)
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
shapiro.test(muestra_hombre$M500_EM_2S_2023_MA)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
shapiro.test(muestra_mujer$M500_EM_2S_2023_MA)
n <- round((N*z^2*mu)/(N*5^2+z^2*sqrt(mu)),0)
n_h <- round(n*N_h/N, 0)
n_m <- round(n*N_m/N, 0)
library(TeachingSampling)
n <- round((N*z^2*mu)/(N*0.05^2+z^2*sqrt(mu)),0)
library(readxl)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
library(magrittr)
library(dplyr)
data_ayacucho <- BD %>% filter(departamento == "AYACUCHO") %>% select(c("sexo",
"area",                     # Zona donde viven (rural o urbana)
"M500_EM_2S_2023_MA"))
any(is.na(data_ayacucho))
data_ayacucho_limpio <- na.omit(data_ayacucho)
data_rural <- data_ayacucho_limpio %>% filter(area=="Rural") %>% select(sexo,M500_EM_2S_2023_MA) # se tiene que extraer como vector numerico
shapiro.test(data_rural$M500_EM_2S_2023_MA)
nota_m <- data_rural$M500_EM_2S_2023_MA
shapiro.test(nota_m)
# Q-Q Plot
qqnorm(nota_m)
qqline(nota_m, col = "red")
# Histograma
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
##  quitar valores extremos
z_scores_m <- scale(nota_m)
extremos_m <- which(abs(z_scores_m)>3)
data_extremos_m <- nota_m[extremos_m]
print(data_extremos_m)
data_rural_sin <- data_rural[-extremos_m, ]
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)  # cumple normalidad
qqnorm(data_rural_sin$M500_EM_2S_2023_MA)
qqline(data_rural_sin$M500_EM_2S_2023_MA, col = "red")
hist(data_rural_sin$M500_EM_2S_2023_MA, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
data_rural_sin
summary(data_rural_sin$M500_EM_2S_2023_MA)
mean(data_rural_sin$M500_EM_2S_2023_MA)
mu <- var(data_rural_sin$M500_EM_2S_2023_MA)
sd(data_rural_sin$M500_EM_2S_2023_MA)
N <- nrow(data_rural_sin)
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre") %>% select(2)
shapiro.test(data_hombre$M500_EM_2S_2023_MA)   # cumple normalidad
N_h <- nrow(data_hombre)
data_mujer <- data_rural_sin %>% filter(sexo == "Mujer") %>%  select(2)
shapiro.test(data_mujer$M500_EM_2S_2023_MA)    # cumple normalidad
N_m <- nrow(data_mujer)
n <- 160
n_h <- round(n*N_h/N, 0)
n_m <- round(n*N_m/N, 0)
library(TeachingSampling)
set.seed(123)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
View(muestra)
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
shapiro.test(muestra_hombre$M500_EM_2S_2023_MA)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
shapiro.test(muestra_mujer$M500_EM_2S_2023_MA)
sqrt(mu)
data_ayacucho_nuevo <- BD %>% filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>% na.omit()
any(is.na(data_ayacucho_nuevo))
View(data_ayacucho_nuevo)
shapiro.test(data_rural$M500_EM_2S_2023_MA)
shapiro.test(data_ayacucho_nuevo$M500_EM_2S_2023_MA)
shapiro.test(nota_m)
summarise(data_rural_sin$M500_EM_2S_2023_MA)
summarise(data_rural_sin)
summarise(data_rural_sin$M500_EM_2S_2023_MA)
summary(data_rural_sin$M500_EM_2S_2023_MA)
any(is.na(data_ayacucho_nuevo))
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(readxl)
library(magrittr)
library(dplyr)
data_ayacucho_nuevo <- BD %>%
filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>%
na.omit()
shapiro.test(data_ayacucho_nuevo$M500_EM_2S_2023_MA)
qqnorm(nota_m)
qqline(nota_m, col = "red")
print(data_extremos_m)
print(data_extremos_m)
extremos_m
View(data_rural)
View(data_rural_sin)
z_scores_m
z_score_muevo <- scale(data_rural$M500_EM_2S_2023_MA)
z_score_muevo
z_score <- scale(data_rural$M500_EM_2S_2023_MA)
extremos_m <- which(abs(z_scores)>3)
z_score <- scale(data_rural$M500_EM_2S_2023_MA)
extremos_m <- which(abs(z_score)>3)
data_rural_sin <- data_rural[-extremos_m, ]
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)
#valores al azar de la distribución normal
randNorm <- rnorm(data_rural_sin$M500_EM_2S_2023_MA)
library(ggplot2)
#valores al azar de la distribución normal
randNorm <- rnorm(data_rural_sin$M500_EM_2S_2023_MA)
#calculo de su densidad
randDensity <- dnorm(randNorm)
#gráfica
library(ggplot2)
ggplot(data.frame(x = randNorm, y = randDensity)) +
aes(x = x, y = y) +
geom_point() +
labs(x = "Random Normal Variable", y = "Densidad")
library(ggplot2)
ggplot(data, aes(x = nota_m)) +
geom_density(fill = "blue", alpha = 0.4) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
ggplot(data_rural_sin, aes(x = data_rural_sin$M500_EM_2S_2023_MA)) +
geom_density(fill = "blue", alpha = 0.4) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
ggplot(data_rural_sin, aes(x = data_rural_sin$M500_EM_2S_2023_MA)) +
geom_density(fill = "blue", alpha = 0.9) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
ggplot(data_rural_sin, aes(x = data_rural_sin$M500_EM_2S_2023_MA)) +
geom_density(fill = "blue", alpha = 0.3) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
library(readxl)
library(magrittr)
library(dplyr)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
data_rural <- BD %>%
filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>%
na.omit()
shapiro.test(data_rural$M500_EM_2S_2023_MA)
z_score <- scale(data_rural$M500_EM_2S_2023_MA)
extremos_m <- which(abs(z_score)>3)
data_rural_sin <- data_rural[-extremos_m, ]
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)
library(ggplot2)
ggplot(data_rural_sin, aes(x = data_rural_sin$M500_EM_2S_2023_MA)) +
geom_density(fill = "blue", alpha = 0.3) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
# Calcular el resumen de estadísticas por genero
resumen_nota <- data_rural_sin %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\mu\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(\\sigma^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(\\sigma\\))" = sd(M500_EM_2S_2023_MA, na.rm = TRUE),
"Tamaño de la población (\\(n\\))" = n()
)
# Imprimir el resumen en una tabla usando kable
knitr::kable(resumen_nota, format = "latex", booktabs = TRUE, escape = FALSE,
caption = "Resumen de las notas por género") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
shapiro.test(data_hombre$M500_EM_2S_2023_MA)$p.value
shapiro.test(data_hombre$M500_EM_2S_2023_MA)
View(resumen_nota)
View(data_rural_sin)
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$sexo, data_rural_sin)
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$sexo, data_rural_sin)
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$sexo, data_rural_sin)
library(ggplot2)
# Calcular residuales por grupo
residuales <- lm(M500_EM_2S_2023_MA ~ sexo, data = data_rural_sin)$residuals
data_rural_sin$residuales <- residuales
# Gráfico de residuales
ggplot(data_rural_sin, aes(x = sexo, y = residuales)) +
geom_boxplot(fill = "skyblue", alpha = 0.5) +
labs(title = "Gráfico de Residuales", x = "Género", y = "Residuales") +
theme_minimal()
summary(data_rural_sin$M500_EM_2S_2023_MA)
summarise(data_rural_sin, mean(data_rural_sin$M500_EM_2S_2023_MA), var(M500_EM_2S_2023_MA))
muestra_hombre <- muestra %>% filter(sexo == "Hombre")
library(magrittr)
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)  # cumple normalidad
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
library(readxl)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
View(BD)
library(magrittr)
library(dplyr)
data_ayacucho_nuevo <- BD %>%
filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>%
na.omit()
shapiro.test(data_ayacucho_nuevo$M500_EM_2S_2023_MA)
nota_m <- data_rural$M500_EM_2S_2023_MA # extraer las notas en forma de vector
data_rural <- BD %>%
filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>%
na.omit()
shapiro.test(data_rural$M500_EM_2S_2023_MA)
nota_m <- data_rural$M500_EM_2S_2023_MA # extraer las notas en forma de vector
# Q-Q Plot
qqnorm(nota_m)
qqline(nota_m, col = "red")
# Histograma
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
##  quitar valores extremos
z_scores_m <- scale(nota_m)
extremos_m <- which(abs(z_scores_m)>3)
data_extremos_m <- nota_m[extremos_m]
print(data_extremos_m)
data_rural_sin <- data_rural[-extremos_m, ]
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)  # cumple normalidad
qqnorm(data_rural_sin$M500_EM_2S_2023_MA)
qqline(data_rural_sin$M500_EM_2S_2023_MA, col = "red")
hist(data_rural_sin$M500_EM_2S_2023_MA, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
shapiro.test(data_hombre$M500_EM_2S_2023_MA)   # cumple normalidad
bartlett.test(data_hombre$M500_EM_2S_2023_MA~data_hombre$sexo)
bartlett.test(data_hombre$M500_EM_2S_2023_MA~data_hombre$sexo, data = data_hombre)
attach(data_rural)
shapiro.test(data_rural$M500_EM_2S_2023_MA)
bartlett.test(M500_EM_2S_2023_MA~sexo, data_rural)
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$sexo)  # cumple normalidad
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)  # cumple normalidad
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$M500_EM_2S_2023_MA,
data = data_rural_sin)
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$M500_EM_2S_2023_MA, data = data_rural_sin)
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~
data_rural_sin$sexo, data = data_rural_sin)
bartlett.test(M500_EM_2S_2023_MA~sexo, data_rural)
bartlett.test(data_hombre$M500_EM_2S_2023_MA~data_hombre$sexo,
data = data_hombre)
data_surgical <- surgical
library(olsrr)
data_surgical <- surgical
View(data_surgical)
str(data_surgical)
library(writexl)
write.csv(data_surgical, row.names = FALSE)
write.csv(data_surgical, "C:/Users/frusc/Desktop/data_surgical.csv",row.names = FALSE)
library(carData)
data_mtcars <- mtcars
View(data_mtcars)
write.csv(data_surgical,
"C:/Users/frusc/Desktop/surgical.csv"
,row.names = FALSE)
data_mtcars <- mtcars
write.csv(data_surgical,
"C:/Users/frusc/Desktop/mtcars.csv"
,row.names = FALSE)
View(data_mtcars)
mtcars
data_mtcars
write.csv(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.csv"
,row.names = FALSE)
library(olsrr)
data_surgical <- surgical
library(writexl)
library(carData)
data_mtcars <- mtcars
write.csv(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.csv"
,row.names = FALSE)
data_surgical <- surgical
write.csv(data_surgical,
"C:/Users/frusc/Desktop/surgical.csv"
,row.names = FALSE)
write.csv(data_surgical,
"C:/Users/frusc/Desktop/surgical.csv"
,row.names = TRUE)
write.csv(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.csv"
,row.names = TRUE)
View(data_mtcars)
write.csv(data_surgical,
"C:/Users/frusc/Desktop/surgical.csv"
,row.names = TRUE)
write_xlsx(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.csv"
,row.names = TRUE)
write_xlsx(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.xlsx"
,row.names = TRUE)
write_xlsx(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.xlsx"
,row.names = FALSE)
write.xlsx(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.xlsx"
,row.names = FALSE)
write_xlsx(data_mtcars,
"C:/Users/frusc/Desktop/mtcars.xlsx",
row.names = FALSE)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
# Estimar el tamaño de cada muestra de población
N_h <- nrow(data_hombre)
N_m <- nrow(data_mujer)
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
library(pacman)
p_load(magrittr)
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
library(readxl)
library(magrittr)
library(dplyr)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
data_rural <- BD %>%
filter(departamento == "AYACUCHO", area == "Rural") %>%
select(c("sexo", "M500_EM_2S_2023_MA")) %>%
na.omit()
shapiro.test(data_rural$M500_EM_2S_2023_MA)
z_score <- scale(data_rural$M500_EM_2S_2023_MA)
extremos_m <- which(abs(z_score)>3)
data_rural_sin <- data_rural[-extremos_m, ]
shapiro.test(data_rural_sin$M500_EM_2S_2023_MA)
library(ggplot2)
ggplot(data_rural_sin, aes(x = data_rural_sin$M500_EM_2S_2023_MA)) +
geom_density(fill = "blue", alpha = 0.3) +
labs(title = "Gráfico de Densidad", x = "Nota", y = "Densidad") +
theme_minimal()
bartlett.test(data_rural_sin$M500_EM_2S_2023_MA~data_rural_sin$sexo, data_rural_sin)
library(ggplot2)
# Calcular residuales por grupo
residuales <- lm(M500_EM_2S_2023_MA ~ sexo, data = data_rural_sin)$residuals
data_rural_sin$residuales <- residuales
# Gráfico de residuales
ggplot(data_rural_sin, aes(x = sexo, y = residuales)) +
geom_boxplot(fill = "skyblue", alpha = 0.5) +
labs(title = "Gráfico de Residuales", x = "Género", y = "Residuales") +
theme_minimal()
# Calcular el resumen de estadísticas por genero
resumen_nota <- data_rural_sin %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\mu\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(\\sigma^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(\\sigma\\))" = sd(M500_EM_2S_2023_MA, na.rm = TRUE),
"Tamaño de la población (\\(N\\))" = n()
)
# Imprimir el resumen en una tabla usando kable
knitr::kable(resumen_nota, format = "latex", booktabs = TRUE, escape = FALSE,
caption = "Resumen de las notas por género") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
data_hombre <- data_rural_sin %>% filter(sexo == "Hombre")
data_mujer <- data_rural_sin %>% filter(sexo == "Mujer")
# Estimar el tamaño de cada muestra de población
N_h <- nrow(data_hombre)
N_m <- nrow(data_mujer)
n <- 160 # tamaño total de la muestra
n_h <- round(n*N_h/N, 0) # tamaño de muestra de estrato masculino
# Estimar el tamaño de cada muestra de población
N <- nrow(data_rural_sin)
N_h <- nrow(data_hombre)
N_m <- nrow(data_mujer)
n <- 160 # tamaño total de la muestra
n_h <- round(n*N_h/N, 0) # tamaño de muestra de estrato masculino
n_m <- round(n*N_m/N, 0) # tamaño de muestra de estrao femenino
library(TeachingSampling)
set.seed(123)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
shapiro.test(muestra_hombre$M500_EM_2S_2023_MA)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
shapiro.test(muestra_mujer$M500_EM_2S_2023_MA)
View(muestra)
View(muestra_hombre)
View(muestra_mujer)
View(muestra)
# Calcula la media, varianza y desviación estándar de MONTO por cada departamento
resumen_muestra <- muestra %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\bar{x}\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(s^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(s\\))" = sd(M500_EM_2S_2023_MA, na.rm=TRUE),
"Tamaño de la muestra (\\(n\\))" = n(),
"Proporción (\\(p\\))" = n()/sum(data_rural_sin)
)
# Calcula la media, varianza y desviación estándar de MONTO por cada departamento
resumen_muestra <- muestra %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\bar{x}\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(s^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(s\\))" = sd(M500_EM_2S_2023_MA, na.rm=TRUE),
"Tamaño de la muestra (\\(n\\))" = n(),
"Proporción (\\(p\\))" = n()/sum(data_rural_sin$M500_EM_2S_2023_MA)
)
# Imprime el resumen en una tabla usando kable
knitr::kable(resumen_mmuestra, format = "latex", booktabs = TRUE, escape = FALSE, caption = "Resumen de cada muestra") %>% kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
# Imprime el resumen en una tabla usando kable
knitr::kable(resumen_mmuestra, format = "latex", booktabs = TRUE, escape = FALSE, caption = "Resumen de cada muestra") %>% kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
library(kableExtra)
# Calcula la media, varianza y desviación estándar de MONTO por cada departamento
resumen_muestra <- muestra %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\bar{x}\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(s^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(s\\))" = sd(M500_EM_2S_2023_MA, na.rm=TRUE),
"Tamaño de la muestra (\\(n\\))" = n(),
"Proporción (\\(p\\))" = n()/sum(data_rural_sin$M500_EM_2S_2023_MA)
)
# Imprime el resumen en una tabla usando kable
knitr::kable(resumen_mmuestra, format = "latex", booktabs = TRUE, escape = FALSE, caption = "Resumen de cada muestra") %>% kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
# Calcula la media, varianza y desviación estándar de MONTO por cada departamento
resumen_muestra <- muestra %>%
group_by(sexo) %>%
summarise(
"Media (\\(\\bar{x}\\))" = mean(M500_EM_2S_2023_MA, na.rm = TRUE),
"Varianza (\\(s^{2}\\))" = var(M500_EM_2S_2023_MA, na.rm = TRUE),
"Desviación Estándar (\\(s\\))" = sd(M500_EM_2S_2023_MA, na.rm=TRUE),
"Tamaño de la muestra (\\(n\\))" = n(),
"Proporción (\\(p\\))" = n()/sum(data_rural_sin$M500_EM_2S_2023_MA)
)
# Imprime el resumen en una tabla usando kable
knitr::kable(resumen_muestra, format = "latex", booktabs = TRUE, escape = FALSE, caption = "Resumen de cada muestra") %>% kable_styling(latex_options = c("striped", "hold_position"), full_width = FALSE)
library(kableExtra)
library(TeachingSampling)
set.seed(123)
sam <- S.STSI(data_rural_sin$sexo, c(N_h, N_m), c(n_h, n_m))
muestra <- data_rural_sin[sam,]
muestra_hombre <- muestra %>% filter(sexo == "Hombre") %>% select(2)
muestra_mujer <- muestra %>% filter(sexo == "Mujer") %>% select(2)
