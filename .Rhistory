colnames(m1)<-c('curso','est','est1','grupo_L1','grupo_L2','grupo_L3','grupo_L4','M500_L','se.grupo_L1',
'se.grupo_L2','se.grupo_L3','se.grupo_L4','se.M500_L')
m<-rbind(m,m1)
### Sexo
res<-data.frame(svyby(~grupo_EM_2S_2023_CT+M500_EM_2S_2023_CT,~sexo,design=dis_L,svymean))
m1<-cbind(rep('Lectura',2),rep('sexo',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_L1','grupo_L2','grupo_L3','grupo_L4','M500_L','se.grupo_L1',
'se.grupo_L2','se.grupo_L3','se.grupo_L4','se.M500_L')
m<-rbind(m,m1)
### Area
res<-data.frame(svyby(~grupo_EM_2S_2023_CT+M500_EM_2S_2023_CT,~area,design=dis_L,svymean))
m1<-cbind(rep('Lectura',2),rep('area',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_L1','grupo_L2','grupo_L3','grupo_L4','M500_L','se.grupo_L1',
'se.grupo_L2','se.grupo_L3','se.grupo_L4','se.M500_L')
m<-rbind(m,m1)
### Gestion
res<-data.frame(svyby(~grupo_EM_2S_2023_CT+M500_EM_2S_2023_CT,~gestion2,design=dis_L,svymean))
m1<-cbind(rep('Lectura',2),rep('gestion',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_L1','grupo_L2','grupo_L3','grupo_L4','M500_L','se.grupo_L1',
'se.grupo_L2','se.grupo_L3','se.grupo_L4','se.M500_L')
m<-rbind(m,m1)
### DRE
dre<-unique(bd_L$nom_dre)
dre<-dre[order(dre)]
for(i in 1:length(dre)){
sub<-bd_L[bd_L$nom_dre==dre[i],]
dis_L<-svydesign(id=~ID_IE,strata=~Estrato_DRE,nest=TRUE,weights=~peso_CT,data=sub,pps='brewer')
res<-data.frame(svymean(~grupo_EM_2S_2023_CT+M500_EM_2S_2023_CT,design=dis_L,na.rm=T))
m1<-cbind('Lectura','DRE',dre[i],res[3,1]*100,res[1,1]*100,res[2,1]*100,res[4,1]*100,res[5,1],res[3,2]*100,res[1,2]*100,res[2,2]*100,res[4,2]*100,res[5,2])
colnames(m1)<-c('curso','est','est1','grupo_L1','grupo_L2','grupo_L3','grupo_L4','M500_L','se.grupo_L1',
'se.grupo_L2','se.grupo_L3','se.grupo_L4','se.M500_L')
m<-rbind(m,m1)
}
m<-m %>% select(curso,est,est1,grupo_L1,se.grupo_L1,grupo_L2,se.grupo_L2,grupo_L3,se.grupo_L3,
grupo_L4,se.grupo_L4,M500_L,se.M500_L)
colnames(m)<-c('Curso','Estrato','Estrato1','Previo al inicio','ee_Previo al inicio','En inicio','ee_En inicio',
'En proceso','ee_En proceso','Satisfactorio','ee_Satisfactorio','Medida promedio','ee_Medida promedio')
write_xlsx(m[-1,],'EM_2S_L_2023.xlsx')
###################### Matematica ##########################################
bd_M<-bd %>% filter(!is.na(grupo_EM_2S_2023_MA)==1)
bd_M<-bd_M %>% select(ID_IE,sexo,gestion2,area,grupo_EM_2S_2023_MA,M500_EM_2S_2023_MA,peso_MA,nom_dre,Estrato_DRE)
bd_M$grupo_M<-as.factor(bd_M$grupo_EM_2S_2023_MA)
options(survey.lonely.psu='certainty')
m<-data.frame(cbind(curso=0,est=0,est1=0,grupo_M1=0,grupo_M2=0,grupo_M3=0,grupo_M4=0,M500_M=0,se.grupo_M1=0,
se.grupo_M2=0,se.grupo_M3=0,se.grupo_M4=0,se.M500_M=0))
dis_M<-svydesign(id=~ID_IE,strata=~Estrato_DRE,nest=TRUE,weights=~peso_MA,data=bd_M,pps='brewer')
res<-data.frame(svymean(~grupo_EM_2S_2023_MA+M500_EM_2S_2023_MA,design=dis_M,na.rm=T))
m1<-cbind('Matematica','Nacional','General',res[3,1]*100,res[1,1]*100,res[2,1]*100,res[4,1]*100,res[5,1],res[3,2]*100,res[1,2]*100,res[2,2]*100,res[4,2]*100,res[5,2])
colnames(m1)<-c('curso','est','est1','grupo_M1','grupo_M2','grupo_M3','grupo_M4','M500_M','se.grupo_M1',
'se.grupo_M2','se.grupo_M3','se.grupo_M4','se.M500_M')
m<-rbind(m,m1)
View(m)
### Sexo
res<-data.frame(svyby(~grupo_EM_2S_2023_MA+M500_EM_2S_2023_MA,~sexo,design=dis_M,svymean))
m1<-cbind(rep('Matematica',2),rep('sexo',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_M1','grupo_M2','grupo_M3','grupo_M4','M500_M','se.grupo_M1',
'se.grupo_M2','se.grupo_M3','se.grupo_M4','se.M500_M')
m<-rbind(m,m1)
View(m1)
### Area
res<-data.frame(svyby(~grupo_EM_2S_2023_MA+M500_EM_2S_2023_MA,~area,design=dis_M,svymean))
m1<-cbind(rep('Matematica',2),rep('area',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_M1','grupo_M2','grupo_M3','grupo_M4','M500_M','se.grupo_M1',
'se.grupo_M2','se.grupo_M3','se.grupo_M4','se.M500_M')
m<-rbind(m,m1)
View(m1)
View(m1)
### Gestion
res<-data.frame(svyby(~grupo_EM_2S_2023_MA+M500_EM_2S_2023_MA,~gestion2,design=dis_M,svymean))
m1<-cbind(rep('Matematica',2),rep('gestion',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_M1','grupo_M2','grupo_M3','grupo_M4','M500_M','se.grupo_M1',
'se.grupo_M2','se.grupo_M3','se.grupo_M4','se.M500_M')
m<-rbind(m,m1)
View(m)
dre<-unique(bd_M$nom_dre)
dre<-dre[order(dre)]
for(i in 1:length(dre)){
sub<-bd_M[bd_M$nom_dre==dre[i],]
dis_M<-svydesign(id=~ID_IE,strata=~Estrato_DRE,nest=TRUE,weights=~peso_MA,data=sub,pps='brewer')
res<-data.frame(svymean(~grupo_EM_2S_2023_MA+M500_EM_2S_2023_MA,design=dis_M,na.rm=T))
m1<-cbind('Matematica','DRE',dre[i],res[3,1]*100,res[1,1]*100,res[2,1]*100,res[4,1]*100,res[5,1],res[3,2]*100,res[1,2]*100,res[2,2]*100,res[4,2]*100,res[5,2])
colnames(m1)<-c('curso','est','est1','grupo_M1','grupo_M2','grupo_M3','grupo_M4','M500_M','se.grupo_M1',
'se.grupo_M2','se.grupo_M3','se.grupo_M4','se.M500_M')
m<-rbind(m,m1)
}
m<-m %>% select(curso,est,est1,grupo_M1,se.grupo_M1,grupo_M2,se.grupo_M2,grupo_M3,se.grupo_M3,
grupo_M4,se.grupo_M4,M500_M,se.M500_M)
colnames(m)<-c('Curso','Estrato','Estrato1','Previo al inicio','ee_Previo al inicio','En inicio','ee_En inicio',
'En proceso','ee_En proceso','Satisfactorio','ee_Satisfactorio','Medida promedio','ee_Medida promedio')
write_xlsx(m[-1,],'EM_2S_M_2023.xlsx')
bd_CS<-bd %>% filter(!is.na(grupo_EM_2S_2023_CS)==1)
bd_CS<-bd_CS %>% select(ID_IE,sexo,gestion2,area,grupo_EM_2S_2023_CS,M500_EM_2S_2023_CS,peso_CS,nom_dre,Estrato_DRE)
bd_CS$grupo_CS<-as.factor(bd_CS$grupo_EM_2S_2023_CS)
options(survey.lonely.psu='certainty')
m<-data.frame(cbind(curso=0,est=0,est1=0,grupo_CS1=0,grupo_CS2=0,grupo_CS3=0,grupo_CS4=0,M500_CS=0,se.grupo_CS1=0,
se.grupo_CS2=0,se.grupo_CS3=0,se.grupo_CS4=0,se.M500_CS=0))
dis_CS<-svydesign(id=~ID_IE,strata=~Estrato_DRE,nest=TRUE,weights=~peso_CS,data=bd_CS,pps='brewer')
res<-data.frame(svymean(~grupo_EM_2S_2023_CS+M500_EM_2S_2023_CS,design=dis_CS,na.rm=T))
m1<-cbind('Ciencias sociales','Nacional','General',res[3,1]*100,res[1,1]*100,res[2,1]*100,res[4,1]*100,res[5,1],res[3,2]*100,res[1,2]*100,res[2,2]*100,res[4,2]*100,res[5,2])
colnames(m1)<-c('curso','est','est1','grupo_CS1','grupo_CS2','grupo_CS3','grupo_CS4','M500_CS','se.grupo_CS1',
'se.grupo_CS2','se.grupo_CS3','se.grupo_CS4','se.M500_CS')
m<-rbind(m,m1)
### Sexo
res<-data.frame(svyby(~grupo_EM_2S_2023_CS+M500_EM_2S_2023_CS,~sexo,design=dis_CS,svymean))
m1<-cbind(rep('Ciencias sociales',2),rep('sexo',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_CS1','grupo_CS2','grupo_CS3','grupo_CS4','M500_CS','se.grupo_CS1',
'se.grupo_CS2','se.grupo_CS3','se.grupo_CS4','se.M500_CS')
m<-rbind(m,m1)
### Area
res<-data.frame(svyby(~grupo_EM_2S_2023_CS+M500_EM_2S_2023_CS,~area,design=dis_CS,svymean))
m1<-cbind(rep('Ciencias sociales',2),rep('area',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_CS1','grupo_CS2','grupo_CS3','grupo_CS4','M500_CS','se.grupo_CS1',
'se.grupo_CS2','se.grupo_CS3','se.grupo_CS4','se.M500_CS')
m<-rbind(m,m1)
View(m)
### Gestion
res<-data.frame(svyby(~grupo_EM_2S_2023_CS+M500_EM_2S_2023_CS,~gestion2,design=dis_CS,svymean))
m1<-cbind(rep('Ciencias sociales',2),rep('gestion',2),res[,1],res[,4]*100,res[,c(2,3,5)]*100,res[,6],res[,9]*100,res[,c(7,8,10)]*100,res[,11])
colnames(m1)<-c('curso','est','est1','grupo_CS1','grupo_CS2','grupo_CS3','grupo_CS4','M500_CS','se.grupo_CS1',
'se.grupo_CS2','se.grupo_CS3','se.grupo_CS4','se.M500_CS')
m<-rbind(m,m1)
### DRE
dre<-unique(bd_CS$nom_dre)
dre<-dre[order(dre)]
for(i in 1:length(dre)){
sub<-bd_CS[bd_CS$nom_dre==dre[i],]
dis_CS<-svydesign(id=~ID_IE,strata=~Estrato_DRE,nest=TRUE,weights=~peso_CS,data=sub,pps='brewer')
res<-data.frame(svymean(~grupo_EM_2S_2023_CS+M500_EM_2S_2023_CS,design=dis_CS,na.rm=T))
m1<-cbind('Ciencias sociales','DRE',dre[i],res[3,1]*100,res[1,1]*100,res[2,1]*100,res[4,1]*100,res[5,1],res[3,2]*100,res[1,2]*100,res[2,2]*100,res[4,2]*100,res[5,2])
colnames(m1)<-c('curso','est','est1','grupo_CS1','grupo_CS2','grupo_CS3','grupo_CS4','M500_CS','se.grupo_CS1',
'se.grupo_CS2','se.grupo_CS3','se.grupo_CS4','se.M500_CS')
m<-rbind(m,m1)
}
m<-m %>% select(curso,est,est1,grupo_CS1,se.grupo_CS1,grupo_CS2,se.grupo_CS2,grupo_CS3,se.grupo_CS3,
grupo_CS4,se.grupo_CS4,M500_CS,se.M500_CS)
colnames(m)<-c('Curso','Estrato','Estrato1','Previo al inicio','ee_Previo al inicio','En inicio','ee_En inicio',
'En proceso','ee_En proceso','Satisfactorio','ee_Satisfactorio','Medida promedio','ee_Medida promedio')
write_xlsx(m[-1,],'EM_2S_CS_2023.xlsx')
rmarkdown::render("trabajo_final_analisis-estadistico")
rmarkdown::render("trabajo_final_analisis-estadistico.rmd")
####CALCULO DE ERRORES ESTANDAR 2S ####
rm(list=ls())
setwd('C:\Users\frusc\Desktop\Análisis Estadistico - Danilo\Trabajos_encargados\ENLA muestral 2S 2023')
####CALCULO DE ERRORES ESTANDAR 2S ####
rm(list=ls())
setwd('C:\Users\frusc\Desktop\Análisis Estadistico - Danilo\Trabajos_encargados\ENLA muestral 2S 2023')
library(sampling)
library(survey)
library(writexl)
library(dplyr)
library(readxl)
bd<-read_excel('BD_2S ENLA muestral 2023.xlsx')
View(bd)
library(dplyr)
población_ayacucho <- bd %>% filter(bd$departamento =="CUSCO")
View(población_ayacucho)
typeof(bd)
head(bd)
población_ayacucho <- bd %>% filter(bd$departamento =="AYACUCHO") %>% select(c(5,6,7, 14,18,19,20,21,22,23,24,25,26))
View(población_ayacucho)
población_urbana <- población_ayacucho %>% filter(area == "Rural")
View(población_urbana)
summary(población_urbana)
población_urbana <- población_ayacucho %>% filter(area == "Urbana")
summary(población_urbana)
población_rural <- población_ayacucho %>% filter(area == "Rural")
summary(población_rural)
summary(población_ayacucho)
View(población_ayacucho)
hist(población_rural, main = "Histograma de los datos", xlab = "Valores", ylab = "Frecuencia", col = "lightblue")
población_ayacucho <- bd %>% filter(bd$departamento =="AYACUCHO") %>% select(c(5,6,7, 18,19,20,21,22,23,24,25,26))
summary(población_ayacucho)
población_urbana <- población_ayacucho %>% filter(area == "Urbana")
summary(población_urbana)
población_rural <- población_ayacucho %>% filter(area == "Rural")
summary(población_rural)
hist(población_rural, main = "Histograma de los datos", xlab = "Valores", ylab = "Frecuencia", col = "lightblue")
View(población_ayacucho)
población_urbana <- población_ayacucho %>% filter(area == "Urbana") %>% select(-3)
summary(población_urbana)
View(población_urbana)
población_rural <- población_ayacucho %>% filter(area == "Rural") %>% select(-3)
summary(población_rural)
View(población_rural)
View(bd)
población_ayacucho <- bd %>% filter(bd$departamento =="AYACUCHO") %>% select(c(5,6,7, 18,20,22,24,25,26))
View(población_ayacucho)
población_ayacucho <- bd %>% filter(bd$departamento =="AYACUCHO") %>% select(c(5,6,7, 18,20,22,24,25,26))
head(población_ayacucho)
población_urbana <- población_ayacucho %>% filter(area == "Urbana") %>% select(-3)
head(población_urbana)
población_rural <- población_ayacucho %>% filter(area == "Rural") %>% select(-3)
head(población_rural)
summary(población_urbana)
summary(población_rural)
3531+727
pob_ayacucho <- bd %>% filter(bd$departamento =="AYACUCHO") %>% select(c(5,6,7, 18,20,22,24,25,26))
head(pob_ayacucho)
summary(pob_ayacucho)
#### Población urbana de Ayacucho
pob_urbana <- pob_ayacucho %>% filter(area == "Urbana") %>% select(-3)
head(pob_urbana)
summary(pob_urbana)
#### Población Rural de Ayacucho
pob_rural <- pob_ayacucho %>% filter(area == "Rural") %>% select(-3)
head(pob_rural)
summary(pob_rural)
######## Muestra por cada área #########
plot(pob_ayacucho)
bd<-read_excel('BD_2S ENLA muestral 2023.xlsx')
bd<-read_excel("BD_2S ENLA muestral 2023.xlsx")
library(readxl)
bd<-read_excel("BD_2S ENLA muestral 2023.xlsx")
library(dplyr)
View(bd)
pob_ayacucho <- filter(departamento == "CUSCO") %>% select(c(5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
pob_ayacucho <- filter(bd$departamento == "CUSCO") %>% select(c(5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
pob_ayacucho <- bd %>% filter(departamento == "CUSCO") %>% select(c(5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
View(pob_ayacucho)
pob-urbana <- pob_ayacucho %>% filter(area == "Urbana")
pob-urbana <- pob_ayacucho %>% filter(area == "urbana")
pob-rural <- pob_ayacucho %>% filter(area == "Rural")
pob_urbana <- pob_ayacucho %>% filter(area == "Urbana")
pob_rural <- pob_ayacucho %>% filter(area == "Rural")
View(pob_urbana)
pob_ayacucho <- bd %>% filter(departamento == "AYACUCHO") %>% select(c(5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
pob_urbana <- pob_ayacucho %>% filter(area == "Urbana")
pob_rural <- pob_ayacucho %>% filter(area == "Rural")
bd<-read_excel("BD_2S ENLA muestral 2023.xlsx")
pob_ayacucho <- bd %>% filter(departamento == "AYACUCHO") %>% select(c(5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
pob_urbana <- pob_ayacucho %>% filter(area == "Urbana")
pob_rural <- pob_ayacucho %>% filter(area == "Rural")
library(readxl)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
View(BD)
library(magrittr)
library(dplyr)
data_ayacucho <- BD %>% filter(departamento == "AYACUCHO") %>% select(c(
"area",                     # Zona donde viven (rural o urbana)
"M500_EM_2S_2023_CT",       # Puntaje de comprensión lectora
"M500_EM_2S_2023_MA",       # Puntaje de matemáticas
"M500_EM_2S_2023_CS"        # Puntaje de ciencias sociales
))
any(is.na(data_ayacucho))
data_ayacucho_limpio <- na.omit(data_ayacucho)
data_rural <- data_ayacucho_limpio %>% filter(area=="Rural") %>% select(-area)
nota_m <- data_rural$M500_EM_2S_2023_MA # se tiene que extraer como vector numerico
shapiro.test(nota_m)
# Q-Q Plot
qqnorm(nota_m)
qqline(nota_m, col = "red")
# Histograma
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
##  quitar valores extremos
z_scores_m <- scale(nota_m)
extremos_m <- which(abs(z_scores_m)>3)
data_extremos_m <- nota_m[extremos_m]
print(data_extremos_m)
nota_m_sin_extremos <- nota_m[-extremos_m]
shapiro.test(nota_m_sin_extremos)  # cumple normalidad
qqnorm(nota_m_sin_extremos)
qqline(nota_m_sin_extremos, col = "red")
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
data_urbano <- data_ayacucho_limpio %>% filter(area == "Urbana") %>% select(-area)
nota_m_urb <- data_urbano$M500_EM_2S_2023_MA # se tiene que extraer como vector numerico
shapiro.test(nota_m_urb)
any(is.na(nota_m_urb))
# Q-Q Plot
qqnorm(nota_m_urb)
qqline(nota_m_urb, col = "red")
# Histograma
hist(nota_m_urb, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
##  quitar valores extremos
z_scores_m_urb <- scale(nota_m_urb)
extremos_m_urb <- which(abs(z_scores_m_urb)>3)
data_extremos_m_urb <- nota_m[extremos_m_urb]
print(data_extremos_m_urb)
nota_m_sin_extremos_urb <- nota_m_urb[-extremos_m_urb]
shapiro.test(nota_m_sin_extremos_urb)  # cumple normalidad
qqnorm(nota_m_sin_extremos_urb)
qqline(nota_m_sin_extremos_urb, col = "red")
hist(nota_m_sin_extremos_urb, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
qqnorm(nota_m_sin_extremos_urb)
qqline(nota_m_sin_extremos_urb, col = "red")
notas_sin_urb <- is.data.frame(nota_m_sin_extremos_urb)
notas_sin_urb
notas_sin_urb <- as.data.frame(nota_m_sin_extremos_urb)
notas_sin_urb
View(notas_sin_urb)
modelo_urb <- lm(notas_sin_urb~1)
modelo_urb <- lm(notas_sin_urb~1)
modelo_urb <- lm(notas_sin_urb~1, notas_sin_urb)
str(data_urbano)
View(data_urbano)
str(nota_m_urb)
str(notas_sin_urb)
notas_sin_urb <- as_tibble(nota_m_sin_extremos_urb)
notas_sin_urb <- as.tibble(nota_m_sin_extremos_urb)
notas_sin_urb <- as.array(nota_m_sin_extremos_urb)
modelo_urb <- lm(notas_sin_urb~1)
summary(modelo_urb)
cooks.distance(modelo_urb)
which(notas_sin_urb[cooks.distance(modelo_urb)]>1)
ti <- rstudent(modelo_urb)
(infl1 <- which(abs(ti)>2))
length(infl1)
str(infl1)
notas_sin_urb
notas_sin_urb_ti <- notas_sin_urb[-infl1]
notas_sin_urb_ti
length(notas_sin_urb_ti)
length(notas_sin_urb)
shapiro.test(notas_sin_urb_ti)
shapiro.test(nota_m_sin_extremos_urb)  # cumple normalidad
qqnorm(nota_m_sin_extremos_urb)
n <- nrow(notas_sin_urb)
q <- 1
dfit <- dffits(modelo_urb)
(infl2 <- which(abs(dfit)>2*sqrt(q/n)))
length(infl2)
length(infl1)
comun_urb <- intersect(infl1, infl2)
length(comun_urb)
notas_sin_urb_ti <- notas_sin_urb[-comun_urb]
notas_sin_urb_ti
length(notas_sin_urb_ti)
shapiro.test(notas_sin_urb_ti)
shapiro.test(nota_m_sin_extremos_urb)  # cumple normalidad
library(olsrr)
ols_plot_resid_lev(modelo_urb)
ols_plot_dfbetas(modelo_urb)
View(data_ayacucho_limpio)
data_promedio <- rowMeans(data_ayacucho_limpio[, c("M500_EM_2S_2023_CT",
"M500_EM_2S_2023_MA",
"M500_EM_2S_2023_CS")], na.rm = TRUE)
data_promedio
length(data_promedio)
shapiro.test(data_promedio)
qqnorm(data_promedio)
qqline(data_promedio, col = "red")
##  quitar valores extremos
data_zcore <- scale(data_promedio)
extremos_data_pro <- which(abs(data_zcore)>3)
data_extremos_pro <- nota_m[extremos_data_pro]
print(data_extremos_pro)
length(data_extremos_pro)
data_extremos_pro
data_ayacucho_limpio$promedio <- rowMeans(data_ayacucho_limpio[, c("M500_EM_2S_2023_CT",
"M500_EM_2S_2023_MA",
"M500_EM_2S_2023_CS")], na.rm = TRUE)
View(data_ayacucho_limpio)
View(data_ayacucho_limpio)
any(is.na(data_ayacucho_limpio))
qqnorm(data_ayacucho_limpio)
qqnorm(data_ayacucho_limpio$promedio)
qqnorm(data_ayacucho_limpio$promedio)
qqline(data_ayacucho_limpio, col = "green")
qqline(data_ayacucho_limpio$promedio, col = "green")
qqline(data_ayacucho_limpio$promedio, col = "blue")
qqline(data_ayacucho_limpio$promedio, col = "orange")
shapiro.test(data_ayacucho_limpio$promedio)
qqnorm(data_ayacucho_limpio$promedio)
qqline(data_ayacucho_limpio$promedio, col = "orange")
shapiro.test(data_ayacucho_limpio$promedio)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio >400)
library(magrittr)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio >400)
qqnorm(data_promedios)
data_promedios
library(readxl)
BD <- read_excel("BD_2S ENLA muestral 2023.xlsx")
View(BD)
library(magrittr)
library(dplyr)
data_ayacucho <- BD %>% filter(departamento == "AYACUCHO") %>% select(c(
"area",                     # Zona donde viven (rural o urbana)
"M500_EM_2S_2023_CT",       # Puntaje de comprensión lectora
"M500_EM_2S_2023_MA",       # Puntaje de matemáticas
"M500_EM_2S_2023_CS"        # Puntaje de ciencias sociales
))
any(is.na(data_ayacucho))
data_ayacucho_limpio <- na.omit(data_ayacucho)
############# Hipótesis general #################
data_ayacucho_limpio$promedio <- rowMeans(data_ayacucho_limpio[, c("M500_EM_2S_2023_CT",
"M500_EM_2S_2023_MA",
"M500_EM_2S_2023_CS")], na.rm = TRUE)
qqnorm(data_ayacucho_limpio$promedio)
qqline(data_ayacucho_limpio$promedio, col = "orange")
shapiro.test(data_ayacucho_limpio$promedio)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio > 400)
View(data_promedios)
data_promedios
data_promedios$promedio
qqnorm(data_promedios$promedio)
qqline(data_promedios$promedio, col = "orange")
shapiro.test(data_promedios$promedio)
data_promedios <- data_ayacucho_limpio %>% filter(700> data_ayacucho_limpio$promedio > 500)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio > 500 | data_ayacucho_limpio$promedio<700)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio > 500 | data_ayacucho_limpio$promedio<750)
data_promedios$promedio
qqnorm(data_promedios$promedio)
qqline(data_promedios$promedio, col = "orange")
shapiro.test(data_promedios$promedio)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio > 500 & data_ayacucho_limpio$promedio<750)
data_promedios$promedio
qqnorm(data_promedios$promedio)
qqline(data_promedios$promedio, col = "orange")
shapiro.test(data_promedios$promedio)
data_promedios <- data_ayacucho_limpio %>% filter(data_ayacucho_limpio$promedio > 500 | data_ayacucho_limpio$promedio<750)
data_promedios$promedio
qqnorm(data_promedios$promedio)
qqline(data_promedios$promedio, col = "orange")
z_scores_promedios <- scale(data_promedios$promedio)
extremos_promedios <- which(abs(z_scores_promedios)>3)
data_extremos_promedios <- nota_m[extremos_promedios]
data_extremos_promedios <- data_promedios[extremos_promedios]
data_extremos_promedios <- data_promedios$promedio[extremos_promedios]
print(data_extremos_promedios)
nota_promedios <- data_ayacucho_limpio$promedio[-data_extremos_promedios]
shapiro.test(nota_promedios)
qqnorm(nota_promedios)
qqline(nota_promedios, col = "orange")
z_scores_promedios
length(extremos_promedios)
extremos_promedios <- which(z_scores_promedios>3)
length(extremos_promedios)
modelo <- lm(promedio~1, data = data_promedios)
shapiro.test(modelo$residuals)
data_promedios
library(olsrr)
ols_plot_dffits(modelo)
ols_plot_dfbetas(modelo)
ols_plot_resid_lev(modelo)
data_rural <- data_ayacucho_limpio %>% filter(area=="Rural") %>% select(-area)
nota_m <- data_rural$M500_EM_2S_2023_MA # se tiene que extraer como vector numerico
shapiro.test(nota_m)
# Q-Q Plot
qqnorm(nota_m)
qqline(nota_m, col = "red")
# Histograma
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
##  quitar valores extremos
z_scores_m <- scale(nota_m)
extremos_m <- which(abs(z_scores_m)>3)
data_extremos_m <- nota_m[extremos_m]
print(data_extremos_m)
nota_m_sin_extremos <- nota_m[-extremos_m]
shapiro.test(nota_m_sin_extremos)  # cumple normalidad
qqnorm(nota_m_sin_extremos)
qqline(nota_m_sin_extremos, col = "red")
hist(nota_m, main = "Histograma de Nota Matemáticas", xlab = "Puntajes")
dfbetas <- dfbetas(modelo)
n <- nrow(data_promedios)
dfbetas <- dfbetas(modelo)
dfbetas[,1]>2/sqrt(n)
(D1<-which(abs(dfbetas[,1])>2/sqrt(n)))
modelo2 <- lm(promedio[-D1]~1, data_promedios)
shapiro.test(modelo2$residuals)
shapiro.test(data_promedios$promedio)
shapiro.test(data_ayacucho_limpio$promedio)
shapiro.test(modelo$residuals)
length(D1)
shapiro.test(modelo2$residuals)
dffit <- dffits(modelo)
(D2<-which(abs(dffit)>2*sqrt(q/n)))
q <- 1
(D2<-which(abs(dffit)>2*sqrt(q/n)))
length(D2)
length(D1)
modelo2 <- lm(promedio[-D2]~1, data_promedios)
shapiro.test(modelo2$residuals)
modelo <- lm(promedio~., data = data_promedios)
shapiro.test(modelo$residuals)
dfbetas <- dfbetas(modelo)
dfbetas[,1]>2/sqrt(n)
(D1<-which(abs(dfbetas[,1])>2/sqrt(n)))
length(D1)
modelo2 <- lm(promedio[-D1]~.[-D1], data_promedios)
modelo2 <- lm(promedio[-D1]~.-D1, data_promedios)
shapiro.test(modelo2$residuals)
modelo2 <- lm(promedio[-D1]~M500_EM_2S_2023_CT[-D1]+
M500_EM_2S_2023_MA[-D1]+
M500_EM_2S_2023_CS[-D1]
, data_promedios)
shapiro.test(modelo2$residuals)
modelo <- lm(promedio~1, data = data_promedios)
shapiro.test(modelo$residuals)
n <- nrow(data_promedios)
dfbetas <- dfbetas(modelo)
dfbetas[,1]>2/sqrt(n)
(D1<-which(abs(dfbetas[,1])>2/sqrt(n)))
length(D1)
data_promedios_df <- data_promedios[-D1]
data_promedios_df <- data_promedios$promedio[-D1]
shapiro.test(data_promedios_df)
ti <- rstudent(modelo)
(infl1 <- which(abs(ti)>2))
length(infl1)
modelo2 <- lm(promedio[-infl1]~1, data = data_promedios)
shapiro.test(modelo2)
shapiro.test(modelo2$residuals)
shapiro.test(modelo$residuals)
shapiro.test(modelo2$residuals)
hii <- hatvalues(modelo)
hat_hii <- which(abs(hii)>2(q/n))
hii <- hatvalues(modelo)
hat_hii <- which(abs(hii)>2(q/n))
hat_hii <- which(abs(hii)>(2q/n))
hat_hii <- which(abs(hii)>2*(q/n))
hat_hii %>% length()
hat_hii
length(hat_hii)
